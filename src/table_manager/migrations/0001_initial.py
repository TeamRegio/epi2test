# Generated by Django 2.2.5 on 2019-10-16 16:09

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='cellTypes',
            fields=[
                ('cellTypeID', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('cellTypeName', models.CharField(blank=True, max_length=30)),
                ('cellOntologyTerm', models.CharField(blank=True, max_length=30)),
            ],
            options={
                'db_table': 'cellTypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='geneAnnotation',
            fields=[
                ('chr', models.CharField(blank=True, max_length=10)),
                ('start', models.IntegerField(blank=True)),
                ('end', models.IntegerField(blank=True)),
                ('geneID', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('geneSymbol', models.CharField(blank=True, max_length=30)),
                ('alternativeGeneID', models.CharField(blank=True, max_length=30)),
                ('isTF', models.BooleanField(blank=True, null=True)),
                ('strand', models.CharField(blank=True, max_length=10)),
            ],
            options={
                'db_table': 'geneAnnotation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='geneExpression',
            fields=[
                ('geneExpressionID', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('expressionLog2TPM', models.FloatField(blank=True)),
            ],
            options={
                'db_table': 'geneExpression',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='genomeAnnotation',
            fields=[
                ('genomeVersion', models.CharField(blank=True, max_length=20)),
                ('annotationVersion', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('database', models.CharField(blank=True, max_length=30)),
            ],
            options={
                'db_table': 'genomeAnnotation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='REMActivity',
            fields=[
                ('REMActivityID', models.IntegerField(db_column='ActivID', primary_key=True, serialize=False)),
                ('dnase1Log2', models.FloatField(blank=True)),
            ],
            options={
                'db_table': 'REMActivity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='REMAnnotation',
            fields=[
                ('chr', models.CharField(blank=True, max_length=10)),
                ('start', models.IntegerField(blank=True)),
                ('end', models.IntegerField(blank=True)),
                ('REMID', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('regressionCoefficient', models.FloatField(blank=True)),
                ('pValue', models.FloatField(blank=True)),
            ],
            options={
                'db_table': 'REMAnnotation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='sampleInfo',
            fields=[
                ('sampleID', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('originalSampleID', models.CharField(blank=True, max_length=30)),
                ('origin', models.CharField(blank=True, max_length=30)),
                ('dataType', models.CharField(blank=True, max_length=20)),
            ],
            options={
                'db_table': 'sampleInfo',
                'managed': False,
            },
        ),
    ]
